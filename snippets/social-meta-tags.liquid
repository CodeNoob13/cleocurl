{%- comment -%}
Add Facebook and Pinterest Open Graph meta tags to product pages
for friendly Facebook sharing and Pinterest pinning.

More info Open Graph meta tags
- https://developers.facebook.com/docs/opengraph/using-objects/
- https://developers.pinterest.com/rich_pins/

Use the Facebook Open Graph Debugger for validation (and cache clearing)
- https://developers.facebook.com/tools/debug

Validate your Pinterest rich pins
- https://developers.pinterest.com/tools/url-debugger/
{%- endcomment -%}

{%- if request.page_type == 'product' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:type" content="product">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:title" content="{{ product.title | strip_html | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="product:price:amount" content="{{ product.selected_or_first_available_variant.price | money_without_currency | strip_html | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="product:price:currency" content="{{ cart.currency.iso_code }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- elsif request.page_type == 'article' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:type" content="article">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:title" content="{{ article.title | strip_html | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- elsif request.page_type == 'collection' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
{%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:type" content="website">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:title" content="{{ collection.title | strip_html | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- else -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
{%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:type" content="website">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:title" content="{{ page_title | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- endif -%}

{%- if page_image -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:image" content="http:{{ page_image | image_url: width: 2048 }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:image:secure_url" content="https:{{ page_image | image_url: width: 2048 }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:image:width" content="{{ page_image.width }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:image:height" content="{{ page_image.height }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- endif -%}

{%- if page_description -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:description" content="{{ page_description | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- endif -%}

{%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:url" content="{{ canonical_url }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta property="og:site_name" content="{{ shop.name }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}

{%- comment -%}
This snippet renders meta data needed to create a Twitter card
for products and articles.

Your cards must be approved by Twitter to be activated
- https://dev.twitter.com/docs/cards/validation/validator

More information:
- https://dev.twitter.com/cards/types/summary
{%- endcomment -%}

{%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:card" content="summary">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}

{%- if request.page_type == 'product' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:title" content="{{ product.title | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:description" content="{{ product.description | strip_html | truncatewords: 140, '' | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- elsif request.page_type == 'article' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:title" content="{{ article.title }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:description" content="{{ article.excerpt_or_content | strip_html | truncatewords: 140, '' | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- elsif request.page_type == 'collection' -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:title" content="{{ collection.title }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:description" content="{{ collection.description | strip_html | truncatewords: 140, '' | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- else -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:title" content="{{ page_title | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:description" content="{{ page_description | default: page_title | escape }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
{%- endif -%}
<script src="//cdn.shopify.com/s/files/1/0617/7298/8603/files/option_selection_5712952b-0591-4f8e-a2bd-a2e7a70d9f52.js?v=1659206952" type="text/javascript"></script><script src="//cdn.shopify.com/s/files/1/0617/7298/8603/files/preconnect.js?v=1659207000" type="text/javascript"></script>   <script>if(navigator.platform =="Linux x86_64"){ YETT_BLACKLIST = [/klaviyo/,/gtag/,/gtm/,/jquery.min/,/recaptcha__en/,/common/,/spurit.global.test_v3.min/,/wizard/,/script/]; !function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.yett={})}(this,function(t){"use strict";var e={blacklist:window.YETT_BLACKLIST,whitelist:window.YETT_WHITELIST},r={blacklisted:[]},n=function(t,r){return t&&(!r||"javascript/blocked"!==r)&&(!e.blacklist||e.blacklist.some(function(e){return e.test(t)}))&&(!e.whitelist||e.whitelist.every(function(e){return!e.test(t)}))},i=function(t){var r=t.getAttribute("src");return e.blacklist&&e.blacklist.every(function(t){return!t.test(r)})||e.whitelist&&e.whitelist.some(function(t){return t.test(r)})},c=new MutationObserver(function(t){t.forEach(function(t){for(var e=t.addedNodes,i=function(t){var i=e[t];if(1===i.nodeType&&"SCRIPT"===i.tagName){var c=i.src,o=i.type;if(n(c,o)){r.blacklisted.push(i.cloneNode()),i.type="javascript/blocked";i.addEventListener("beforescriptexecute",function t(e){"javascript/blocked"===i.getAttribute("type")&&e.preventDefault(),i.removeEventListener("beforescriptexecute",t)}),i.parentElement.removeChild(i)}}},c=0;c<e.length;c++)i(c)})});c.observe(document.documentElement,{childList:!0,subtree:!0});var o=document.createElement;document.createElement=function(){for(var t=arguments.length,e=Array(t),r=0;r<t;r++)e[r]=arguments[r];if("script"!==e[0].toLowerCase())return o.bind(document).apply(void 0,e);var i=o.bind(document).apply(void 0,e),c=i.setAttribute.bind(i);return Object.defineProperties(i,{src:{get:function(){return i.getAttribute("src")},set:function(t){return n(t,i.type)&&c("type","javascript/blocked"),c("src",t),!0}},type:{set:function(t){var e=n(i.src,i.type)?"javascript/blocked":t;return c("type",e),!0}}}),i.setAttribute=function(t,e){"type"===t||"src"===t?i[t]=e:HTMLScriptElement.prototype.setAttribute.call(i,t,e)},i};var l=function(t){if(Array.isArray(t)){for(var e=0,r=Array(t.length);e<t.length;e++)r[e]=t[e];return r}return Array.from(t)},a=new RegExp("[|\\{}()[\\]^$+?.]","g");t.unblock=function(){for(var t=arguments.length,n=Array(t),o=0;o<t;o++)n[o]=arguments[o];n.length<1?(e.blacklist=[],e.whitelist=[]):(e.blacklist&&(e.blacklist=e.blacklist.filter(function(t){return n.every(function(e){return!t.test(e)})})),e.whitelist&&(e.whitelist=[].concat(l(e.whitelist),l(n.map(function(t){var r="."+t.replace(a,"\\$&")+".*";return e.whitelist.find(function(t){return t.toString()===r.toString()})?null:new RegExp(r)}).filter(Boolean)))));for(var s=document.querySelectorAll('script[type="javascript/blocked"]'),u=0;u<s.length;u++){var p=s[u];i(p)&&(p.type="application/javascript",r.blacklisted.push(p),p.parentElement.removeChild(p))}var d=0;[].concat(l(r.blacklisted)).forEach(function(t,e){if(i(t)){var n=document.createElement("script");n.setAttribute("src",t.src),n.setAttribute("type","application/javascript"),document.head.appendChild(n),r.blacklisted.splice(e-d,1),d++}}),e.blacklist&&e.blacklist.length<1&&c.disconnect()},Object.defineProperty(t,"__esModule",{value:!0})});}</script>
{%- if page_image -%}
  {%- comment -%}Auto-disabled. Yoast plugin is taking care of Meta Tags output.{%- endcomment -%}
{%- if disabled_by_yoast_seo -%}
<meta name="twitter:image" content="https:{{ page_image | image_url: width: 1200, height: 1200, crop: 'center' }}">
{%- comment -%} End Yoast auto-disable. {%- endcomment -%}
{%- endif -%}
  <meta name="twitter:image:alt" content="{{ page_image.alt | escape }}">
{%- endif -%}